@use "sass:math";

@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

$roboto: "Roboto", sans-serif;

$body-bg: #f2f0f8;
$secondary-black-900: #1d1d1d;
$white-50: rgba(255, 255, 255, .5);
$purple-dark: #9680ff;
$white-20: rgba(255, 255, 255, .2);
$border: #9b9b9b;
$white: #fff;
$purple: #9680ff;
$txt-gray: #494949;
$txt-dis: #c1c1c1;
$txt-fade: #6c6c6c;
$black: #191919;
$black-70: rgba(29, 29, 29, .7);
$white-70: rgba(255, 255, 255, .7);
$white-30: rgba(255, 255, 255, .3);
$txt-body: #2e2e2e;
$white-80: rgba(255, 255, 255, .8);
$black-30: rgba(29, 29, 29, .3);
$white-10: rgba(255, 255, 255, .1);
$black-10: rgba(0, 0, 0, .1);
$border-white: #d7d7d7;
$black-100: black;
$txt-sub: #202020;
$dark-theme-bg: #090909;
$body: 16px;
$navi-blur-bg: rgba(242, 240, 248, .2);
$white-81: white;
$black-101: black;

//*------> pixel to rem

@function rem($pixel) {
    @if math.is-unitless($pixel) {
        @return math.div($pixel, 16)+rem;
    }

    @else {
        @error "There is a unit present in the value";
    }
}

//*------> pixel to em

@function em($pixel) {
    @if math.is-unitless($pixel) {
        @return math.div($pixel, 16)+em;
    }

    @else {
        @error "There is a unit present in the value";
    }
}

//*------> responsive

$breakpoint-up: (
    "tablet": em(800),
    "laptop": em(1024),
    "large": em(2040),
);

@mixin breakpoint($size) {
    @media screen and (min-width: map-get($breakpoint-up, $size)) {
        @content;
    }
}

//*------> width and padding

@mixin full-width {
    width: 100vw;
    max-width: 100%;
    padding: 0 2vw;

    @include breakpoint(tablet) {
        padding: 0 10vw;
    }
}